@page "/manage-venues"
@using CEMSCET254.Services
@using CEMSCET254.Data.Models
@inject VenueService VenueService

<h3>Manage Venues</h3>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Address</th>
            <th>Capacity</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var venue in venues)
        {
            <tr>
                <td>@venue.Name</td>
                <td>@venue.Address</td>
                <td>@venue.Capacity</td>
                <td>
                    <button class="btn btn-warning" @onclick="() => EditVenue(venue.Id)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteVenue(venue.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<h4>Add/Edit Venue</h4>
<form>
    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <input type="text" id="name" @bind="currentVenue.Name" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="address" class="form-label">Address</label>
        <input type="text" id="address" @bind="currentVenue.Address" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="capacity" class="form-label">Capacity</label>
        <input type="number" id="capacity" @bind="currentVenue.Capacity" class="form-control" />
    </div>
    <button class="btn btn-primary" @onclick="SaveVenue">Save</button>
</form>

@code {
    private List<Venue> venues = new List<Venue>();
    private Venue currentVenue = new Venue();

    protected override async Task OnInitializedAsync()
    {
        venues = await VenueService.GetAllVenuesAsync();
    }

    private async Task SaveVenue()
    {
        if (currentVenue.Id == 0)
        {
            await VenueService.AddVenueAsync(currentVenue);
        }
        else
        {
            await VenueService.UpdateVenueAsync(currentVenue);
        }
        currentVenue = new Venue();
        venues = await VenueService.GetAllVenuesAsync();
    }

    private async Task EditVenue(int id)
    {
        currentVenue = await VenueService.GetVenueByIdAsync(id);
    }

    private async Task DeleteVenue(int id)
    {
        await VenueService.DeleteVenueAsync(id);
        venues = await VenueService.GetAllVenuesAsync();
    }
}
